import {
  Activity,
  ArrowUpRight,
  CreditCard,
  DollarSign,
  Users,
  CheckCircle,
  ListTodo,
  Hourglass
} from "lucide-react"

import {
  Avatar,
  AvatarFallback,
  AvatarImage,
} from "@/components/ui/avatar"
import { Badge } from "@/components/ui/badge"
import { Button } from "@/components/ui/button"
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card"
import { getTasks, getTeamMemberUpdates } from "@/lib/firebase"
import { summarizeProjectStatus } from "@/ai/flows/summarize-project-status"
import { TaskTable } from "@/components/task-table"
import Link from "next/link"


export default async function LeadDashboard() {
  const tasks = await getTasks();
  const teamMemberUpdates = await getTeamMemberUpdates();
  
  const tasksDataForAI = tasks.reduce((acc, task) => {
    acc[task.id] = {
      taskName: task.taskName,
      owner: task.owner,
      priority: task.priority,
      status: task.status,
      startDate: task.startDate,
      dueDate: task.dueDate,
      percentComplete: task.percentComplete,
      dependsOn: task.dependsOn,
      blockers: task.blockers,
      nextSteps: task.nextSteps,
      notes: task.notes,
    };
    return acc;
  }, {} as any);

  const summaryResult = await summarizeProjectStatus({
      tasks: JSON.stringify(tasksDataForAI),
      teamUpdates: JSON.stringify(teamMemberUpdates),
  });

  const completedTasks = tasks.filter(t => t.status === 'Completed').length;
  const inProgressTasks = tasks.filter(t => t.status === 'In Progress').length;
  
  return (
    <div className="flex flex-col gap-6">
      <div className="grid gap-4 md:grid-cols-2 md:gap-8 lg:grid-cols-4">
        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">
              Total Tasks
            </CardTitle>
            <ListTodo className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{tasks.length}</div>
            <p className="text-xs text-muted-foreground">
              All tasks in the project
            </p>
          </CardContent>
        </Card>
        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">
              Completed
            </CardTitle>
            <CheckCircle className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{completedTasks}</div>
            <p className="text-xs text-muted-foreground">
              {((completedTasks / tasks.length) * 100).toFixed(0)}% of all tasks
            </p>
          </CardContent>
        </Card>
        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">In Progress</CardTitle>
            <Hourglass className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{inProgressTasks}</div>
            <p className="text-xs text-muted-foreground">
              Tasks currently being worked on
            </p>
          </CardContent>
        </Card>
        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">Active Members</CardTitle>
            <Activity className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{teamMemberUpdates.length}</div>
            <p className="text-xs text-muted-foreground">
              Team members with updates today
            </p>
          </CardContent>
        </Card>
      </div>

       <Card>
        <CardHeader>
          <CardTitle className="font-headline">AI Project Summary</CardTitle>
          <CardDescription>Generated by Gemini based on current project data.</CardDescription>
        </CardHeader>
        <CardContent className="space-y-4">
          <div>
            <h3 className="font-semibold mb-1">Overall Status</h3>
            <p className="text-sm text-muted-foreground">{summaryResult.summary}</p>
          </div>
          <div>
            <h3 className="font-semibold mb-1 text-destructive">Identified Risks</h3>
            <p className="text-sm text-muted-foreground">{summaryResult.risks}</p>
          </div>
          <div>
            <h3 className="font-semibold mb-1 text-green-600">Recommendations</h3>
            <p className="text-sm text-muted-foreground">{summaryResult.recommendations}</p>
          </div>
        </CardContent>
      </Card>
    </div>
  )
}
